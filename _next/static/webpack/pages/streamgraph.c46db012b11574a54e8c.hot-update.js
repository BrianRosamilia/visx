webpackHotUpdate_N_E("pages/streamgraph",{

/***/ "../../node_modules/raw-loader/dist/cjs.js!./src/sandboxes/visx-streamgraph/Example.tsx":
/*!**************************************************************************************************************!*\
  !*** /Users/harry/dev/visx/node_modules/raw-loader/dist/cjs.js!./src/sandboxes/visx-streamgraph/Example.tsx ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"/* eslint-disable react-hooks/rules-of-hooks */\\n/**\\n * Inspired by Mike Bostock's Streamgraph & Lee Byronâ€™s test data generator:\\n * https://bl.ocks.org/mbostock/4060954\\n */\\nimport React from 'react';\\nimport { Stack } from '@visx/shape';\\nimport { PatternCircles, PatternWaves } from '@visx/pattern';\\nimport { scaleLinear, scaleOrdinal } from '@visx/scale';\\nimport { transpose } from 'd3-array';\\nimport { animated, useSpring } from 'react-spring';\\n\\nimport useForceUpdate from './useForceUpdate';\\nimport generateData from './generateData';\\n\\n// constants\\nconst NUM_LAYERS = 20;\\nconst SAMPLES_PER_LAYER = 200;\\nconst BUMPS_PER_LAYER = 10;\\nexport const BACKGROUND = '#ffdede';\\n\\n// utils\\nconst range = (n: number) => Array.from(new Array(n), (_, i) => i);\\n\\nconst keys = range(NUM_LAYERS);\\n\\n// scales\\nconst xScale = scaleLinear<number>({\\n  domain: [0, SAMPLES_PER_LAYER - 1],\\n});\\nconst yScale = scaleLinear<number>({\\n  domain: [-30, 50],\\n});\\nconst colorScale = scaleOrdinal<number, string>({\\n  domain: keys,\\n  range: ['#ffc409', '#f14702', '#262d97', 'white', '#036ecd', '#9ecadd', '#51666e'],\\n});\\nconst patternScale = scaleOrdinal<number, string>({\\n  domain: keys,\\n  range: ['mustard', 'cherry', 'navy', 'circles', 'circles', 'circles', 'circles'],\\n});\\n\\n// accessors\\ntype Datum = number[];\\nconst getY0 = (d: Datum) => yScale(d[0]);\\nconst getY1 = (d: Datum) => yScale(d[1]);\\n\\nexport type StreamGraphProps = {\\n  width: number;\\n  height: number;\\n  animate?: boolean;\\n};\\n\\nexport default function Streamgraph({ width, height, animate = true }: StreamGraphProps) {\\n  const forceUpdate = useForceUpdate();\\n  const handlePress = () => forceUpdate();\\n\\n  if (width < 10) return null;\\n\\n  xScale.range([0, width]);\\n  yScale.range([height, 0]);\\n\\n  // generate layers in render to update on touch\\n  const layers = transpose<number>(\\n    keys.map(() => generateData(SAMPLES_PER_LAYER, BUMPS_PER_LAYER)),\\n  );\\n\\n  return (\\n    <svg width={width} height={height}>\\n      <PatternCircles id=\\\"mustard\\\" height={40} width={40} radius={5} fill=\\\"#036ecf\\\" complement />\\n      <PatternWaves\\n        id=\\\"cherry\\\"\\n        height={12}\\n        width={12}\\n        fill=\\\"transparent\\\"\\n        stroke=\\\"#232493\\\"\\n        strokeWidth={1}\\n      />\\n      <PatternCircles id=\\\"navy\\\" height={60} width={60} radius={10} fill=\\\"white\\\" complement />\\n      <PatternCircles\\n        complement\\n        id=\\\"circles\\\"\\n        height={60}\\n        width={60}\\n        radius={10}\\n        fill=\\\"transparent\\\"\\n      />\\n\\n      <g onClick={handlePress} onTouchStart={handlePress}>\\n        <rect x={0} y={0} width={width} height={height} fill={BACKGROUND} rx={14} />\\n        <Stack<number[], number>\\n          data={layers}\\n          keys={keys}\\n          offset=\\\"wiggle\\\"\\n          color={colorScale}\\n          x={(_, i) => xScale(i)}\\n          y0={getY0}\\n          y1={getY1}\\n        >\\n          {({ stacks, path }) =>\\n            stacks.map(stack => {\\n              // Alternatively use renderprops <Spring to={{ d }}>{tweened => ...}</Spring>\\n              const tweened = animate ? useSpring({ d: path(stack) }) : { d: path(stack) };\\n              const color = colorScale(stack.key);\\n              const pattern = patternScale(stack.key);\\n              return (\\n                <g key={`series-${stack.key}`}>\\n                  <animated.path d={tweened.d || ''} fill={color} />\\n                  <animated.path d={tweened.d || ''} fill={`url(#${pattern})`} />\\n                </g>\\n              );\\n            })\\n          }\\n        </Stack>\\n      </g>\\n    </svg>\\n  );\\n}\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3NhbmRib3hlcy92aXN4LXN0cmVhbWdyYXBoL0V4YW1wbGUudHN4P2I4MGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSw0UUFBNk0sVUFBVSxRQUFRLG9CQUFvQixVQUFVLCtCQUErQixzQkFBc0IsVUFBVSw0QkFBNEIsb0JBQW9CLFVBQVUsWUFBWSxpQkFBaUIsVUFBVSxzQkFBc0IscUJBQXFCLGtEQUFrRCw0Q0FBNEMsd0NBQXdDLGdDQUFnQyw2QkFBNkIsc0NBQXNDLGlGQUFpRixtQ0FBbUMsbURBQW1ELDBDQUEwQyxFQUFFLHNDQUFzQyx5QkFBeUIsRUFBRSxtREFBbUQsMkdBQTJHLEVBQUUscURBQXFELHlHQUF5RyxFQUFFLHdDQUF3QywyQ0FBMkMsMkNBQTJDLG9DQUFvQyxrQkFBa0IsbUJBQW1CLHNCQUFzQixJQUFJLHlDQUF5QyxnQ0FBZ0MscUJBQXFCLHlDQUF5Qyw0Q0FBNEMsa0NBQWtDLCtCQUErQiw4QkFBOEIsdUtBQXVLLGdDQUFnQyxNQUFNLFNBQVMsT0FBTyxnREFBZ0QsR0FBRyxRQUFRLEdBQUcsU0FBUyxFQUFFLDZGQUE2RixHQUFHLGlCQUFpQixHQUFHLGlGQUFpRixFQUFFLHNEQUFzRCxHQUFHLFFBQVEsR0FBRyxTQUFTLEdBQUcsa0hBQWtILEdBQUcsaUJBQWlCLEdBQUcsa0JBQWtCLEdBQUcsOERBQThELFlBQVksZUFBZSxZQUFZLG9CQUFvQixFQUFFLElBQUksRUFBRSxRQUFRLE1BQU0sU0FBUyxPQUFPLE9BQU8sV0FBVyxLQUFLLEdBQUcsdURBQXVELE9BQU8sa0JBQWtCLEtBQUssZ0RBQWdELFdBQVcsZUFBZSxvQkFBb0IsZ0JBQWdCLE1BQU0sZ0JBQWdCLE1BQU0sd0JBQXdCLEVBQUUsZUFBZSx1Q0FBdUMsOERBQThELEtBQUssRUFBRSxlQUFlLDhEQUE4RCxpQkFBaUIsS0FBSyxrQkFBa0Isb0RBQW9ELHdEQUF3RCxrREFBa0QsVUFBVSxVQUFVLEVBQUUsdUNBQXVDLGdCQUFnQixPQUFPLE1BQU0seUNBQXlDLGdCQUFnQixPQUFPLFFBQVEsUUFBUSxHQUFHLDJDQUEyQyxlQUFlLGNBQWMsZ0RBQWdELEdBQUcsR0FBRyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvcmF3LWxvYWRlci9kaXN0L2Nqcy5qcyEuL3NyYy9zYW5kYm94ZXMvdmlzeC1zdHJlYW1ncmFwaC9FeGFtcGxlLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiLyogZXNsaW50LWRpc2FibGUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3MgKi9cXG4vKipcXG4gKiBJbnNwaXJlZCBieSBNaWtlIEJvc3RvY2sncyBTdHJlYW1ncmFwaCAmIExlZSBCeXJvbuKAmXMgdGVzdCBkYXRhIGdlbmVyYXRvcjpcXG4gKiBodHRwczovL2JsLm9ja3Mub3JnL21ib3N0b2NrLzQwNjA5NTRcXG4gKi9cXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xcbmltcG9ydCB7IFN0YWNrIH0gZnJvbSAnQHZpc3gvc2hhcGUnO1xcbmltcG9ydCB7IFBhdHRlcm5DaXJjbGVzLCBQYXR0ZXJuV2F2ZXMgfSBmcm9tICdAdmlzeC9wYXR0ZXJuJztcXG5pbXBvcnQgeyBzY2FsZUxpbmVhciwgc2NhbGVPcmRpbmFsIH0gZnJvbSAnQHZpc3gvc2NhbGUnO1xcbmltcG9ydCB7IHRyYW5zcG9zZSB9IGZyb20gJ2QzLWFycmF5JztcXG5pbXBvcnQgeyBhbmltYXRlZCwgdXNlU3ByaW5nIH0gZnJvbSAncmVhY3Qtc3ByaW5nJztcXG5cXG5pbXBvcnQgdXNlRm9yY2VVcGRhdGUgZnJvbSAnLi91c2VGb3JjZVVwZGF0ZSc7XFxuaW1wb3J0IGdlbmVyYXRlRGF0YSBmcm9tICcuL2dlbmVyYXRlRGF0YSc7XFxuXFxuLy8gY29uc3RhbnRzXFxuY29uc3QgTlVNX0xBWUVSUyA9IDIwO1xcbmNvbnN0IFNBTVBMRVNfUEVSX0xBWUVSID0gMjAwO1xcbmNvbnN0IEJVTVBTX1BFUl9MQVlFUiA9IDEwO1xcbmV4cG9ydCBjb25zdCBCQUNLR1JPVU5EID0gJyNmZmRlZGUnO1xcblxcbi8vIHV0aWxzXFxuY29uc3QgcmFuZ2UgPSAobjogbnVtYmVyKSA9PiBBcnJheS5mcm9tKG5ldyBBcnJheShuKSwgKF8sIGkpID0+IGkpO1xcblxcbmNvbnN0IGtleXMgPSByYW5nZShOVU1fTEFZRVJTKTtcXG5cXG4vLyBzY2FsZXNcXG5jb25zdCB4U2NhbGUgPSBzY2FsZUxpbmVhcjxudW1iZXI+KHtcXG4gIGRvbWFpbjogWzAsIFNBTVBMRVNfUEVSX0xBWUVSIC0gMV0sXFxufSk7XFxuY29uc3QgeVNjYWxlID0gc2NhbGVMaW5lYXI8bnVtYmVyPih7XFxuICBkb21haW46IFstMzAsIDUwXSxcXG59KTtcXG5jb25zdCBjb2xvclNjYWxlID0gc2NhbGVPcmRpbmFsPG51bWJlciwgc3RyaW5nPih7XFxuICBkb21haW46IGtleXMsXFxuICByYW5nZTogWycjZmZjNDA5JywgJyNmMTQ3MDInLCAnIzI2MmQ5NycsICd3aGl0ZScsICcjMDM2ZWNkJywgJyM5ZWNhZGQnLCAnIzUxNjY2ZSddLFxcbn0pO1xcbmNvbnN0IHBhdHRlcm5TY2FsZSA9IHNjYWxlT3JkaW5hbDxudW1iZXIsIHN0cmluZz4oe1xcbiAgZG9tYWluOiBrZXlzLFxcbiAgcmFuZ2U6IFsnbXVzdGFyZCcsICdjaGVycnknLCAnbmF2eScsICdjaXJjbGVzJywgJ2NpcmNsZXMnLCAnY2lyY2xlcycsICdjaXJjbGVzJ10sXFxufSk7XFxuXFxuLy8gYWNjZXNzb3JzXFxudHlwZSBEYXR1bSA9IG51bWJlcltdO1xcbmNvbnN0IGdldFkwID0gKGQ6IERhdHVtKSA9PiB5U2NhbGUoZFswXSk7XFxuY29uc3QgZ2V0WTEgPSAoZDogRGF0dW0pID0+IHlTY2FsZShkWzFdKTtcXG5cXG5leHBvcnQgdHlwZSBTdHJlYW1HcmFwaFByb3BzID0ge1xcbiAgd2lkdGg6IG51bWJlcjtcXG4gIGhlaWdodDogbnVtYmVyO1xcbiAgYW5pbWF0ZT86IGJvb2xlYW47XFxufTtcXG5cXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTdHJlYW1ncmFwaCh7IHdpZHRoLCBoZWlnaHQsIGFuaW1hdGUgPSB0cnVlIH06IFN0cmVhbUdyYXBoUHJvcHMpIHtcXG4gIGNvbnN0IGZvcmNlVXBkYXRlID0gdXNlRm9yY2VVcGRhdGUoKTtcXG4gIGNvbnN0IGhhbmRsZVByZXNzID0gKCkgPT4gZm9yY2VVcGRhdGUoKTtcXG5cXG4gIGlmICh3aWR0aCA8IDEwKSByZXR1cm4gbnVsbDtcXG5cXG4gIHhTY2FsZS5yYW5nZShbMCwgd2lkdGhdKTtcXG4gIHlTY2FsZS5yYW5nZShbaGVpZ2h0LCAwXSk7XFxuXFxuICAvLyBnZW5lcmF0ZSBsYXllcnMgaW4gcmVuZGVyIHRvIHVwZGF0ZSBvbiB0b3VjaFxcbiAgY29uc3QgbGF5ZXJzID0gdHJhbnNwb3NlPG51bWJlcj4oXFxuICAgIGtleXMubWFwKCgpID0+IGdlbmVyYXRlRGF0YShTQU1QTEVTX1BFUl9MQVlFUiwgQlVNUFNfUEVSX0xBWUVSKSksXFxuICApO1xcblxcbiAgcmV0dXJuIChcXG4gICAgPHN2ZyB3aWR0aD17d2lkdGh9IGhlaWdodD17aGVpZ2h0fT5cXG4gICAgICA8UGF0dGVybkNpcmNsZXMgaWQ9XFxcIm11c3RhcmRcXFwiIGhlaWdodD17NDB9IHdpZHRoPXs0MH0gcmFkaXVzPXs1fSBmaWxsPVxcXCIjMDM2ZWNmXFxcIiBjb21wbGVtZW50IC8+XFxuICAgICAgPFBhdHRlcm5XYXZlc1xcbiAgICAgICAgaWQ9XFxcImNoZXJyeVxcXCJcXG4gICAgICAgIGhlaWdodD17MTJ9XFxuICAgICAgICB3aWR0aD17MTJ9XFxuICAgICAgICBmaWxsPVxcXCJ0cmFuc3BhcmVudFxcXCJcXG4gICAgICAgIHN0cm9rZT1cXFwiIzIzMjQ5M1xcXCJcXG4gICAgICAgIHN0cm9rZVdpZHRoPXsxfVxcbiAgICAgIC8+XFxuICAgICAgPFBhdHRlcm5DaXJjbGVzIGlkPVxcXCJuYXZ5XFxcIiBoZWlnaHQ9ezYwfSB3aWR0aD17NjB9IHJhZGl1cz17MTB9IGZpbGw9XFxcIndoaXRlXFxcIiBjb21wbGVtZW50IC8+XFxuICAgICAgPFBhdHRlcm5DaXJjbGVzXFxuICAgICAgICBjb21wbGVtZW50XFxuICAgICAgICBpZD1cXFwiY2lyY2xlc1xcXCJcXG4gICAgICAgIGhlaWdodD17NjB9XFxuICAgICAgICB3aWR0aD17NjB9XFxuICAgICAgICByYWRpdXM9ezEwfVxcbiAgICAgICAgZmlsbD1cXFwidHJhbnNwYXJlbnRcXFwiXFxuICAgICAgLz5cXG5cXG4gICAgICA8ZyBvbkNsaWNrPXtoYW5kbGVQcmVzc30gb25Ub3VjaFN0YXJ0PXtoYW5kbGVQcmVzc30+XFxuICAgICAgICA8cmVjdCB4PXswfSB5PXswfSB3aWR0aD17d2lkdGh9IGhlaWdodD17aGVpZ2h0fSBmaWxsPXtCQUNLR1JPVU5EfSByeD17MTR9IC8+XFxuICAgICAgICA8U3RhY2s8bnVtYmVyW10sIG51bWJlcj5cXG4gICAgICAgICAgZGF0YT17bGF5ZXJzfVxcbiAgICAgICAgICBrZXlzPXtrZXlzfVxcbiAgICAgICAgICBvZmZzZXQ9XFxcIndpZ2dsZVxcXCJcXG4gICAgICAgICAgY29sb3I9e2NvbG9yU2NhbGV9XFxuICAgICAgICAgIHg9eyhfLCBpKSA9PiB4U2NhbGUoaSl9XFxuICAgICAgICAgIHkwPXtnZXRZMH1cXG4gICAgICAgICAgeTE9e2dldFkxfVxcbiAgICAgICAgPlxcbiAgICAgICAgICB7KHsgc3RhY2tzLCBwYXRoIH0pID0+XFxuICAgICAgICAgICAgc3RhY2tzLm1hcChzdGFjayA9PiB7XFxuICAgICAgICAgICAgICAvLyBBbHRlcm5hdGl2ZWx5IHVzZSByZW5kZXJwcm9wcyA8U3ByaW5nIHRvPXt7IGQgfX0+e3R3ZWVuZWQgPT4gLi4ufTwvU3ByaW5nPlxcbiAgICAgICAgICAgICAgY29uc3QgdHdlZW5lZCA9IGFuaW1hdGUgPyB1c2VTcHJpbmcoeyBkOiBwYXRoKHN0YWNrKSB9KSA6IHsgZDogcGF0aChzdGFjaykgfTtcXG4gICAgICAgICAgICAgIGNvbnN0IGNvbG9yID0gY29sb3JTY2FsZShzdGFjay5rZXkpO1xcbiAgICAgICAgICAgICAgY29uc3QgcGF0dGVybiA9IHBhdHRlcm5TY2FsZShzdGFjay5rZXkpO1xcbiAgICAgICAgICAgICAgcmV0dXJuIChcXG4gICAgICAgICAgICAgICAgPGcga2V5PXtgc2VyaWVzLSR7c3RhY2sua2V5fWB9PlxcbiAgICAgICAgICAgICAgICAgIDxhbmltYXRlZC5wYXRoIGQ9e3R3ZWVuZWQuZCB8fCAnJ30gZmlsbD17Y29sb3J9IC8+XFxuICAgICAgICAgICAgICAgICAgPGFuaW1hdGVkLnBhdGggZD17dHdlZW5lZC5kIHx8ICcnfSBmaWxsPXtgdXJsKCMke3BhdHRlcm59KWB9IC8+XFxuICAgICAgICAgICAgICAgIDwvZz5cXG4gICAgICAgICAgICAgICk7XFxuICAgICAgICAgICAgfSlcXG4gICAgICAgICAgfVxcbiAgICAgICAgPC9TdGFjaz5cXG4gICAgICA8L2c+XFxuICAgIDwvc3ZnPlxcbiAgKTtcXG59XFxuXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/raw-loader/dist/cjs.js!./src/sandboxes/visx-streamgraph/Example.tsx\n");

/***/ }),

/***/ "./src/sandboxes/visx-streamgraph/Example.tsx":
/*!****************************************************!*\
  !*** ./src/sandboxes/visx-streamgraph/Example.tsx ***!
  \****************************************************/
/*! exports provided: BACKGROUND, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BACKGROUND\", function() { return BACKGROUND; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Streamgraph; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _visx_shape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @visx/shape */ \"../visx-shape/esm/index.js\");\n/* harmony import */ var _visx_pattern__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @visx/pattern */ \"../visx-pattern/esm/index.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @visx/scale */ \"../visx-scale/esm/index.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ \"../../node_modules/d3-array/src/index.js\");\n/* harmony import */ var react_spring__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-spring */ \"../../node_modules/react-spring/web.js\");\n/* harmony import */ var _useForceUpdate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./useForceUpdate */ \"./src/sandboxes/visx-streamgraph/useForceUpdate.ts\");\n/* harmony import */ var _generateData__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./generateData */ \"./src/sandboxes/visx-streamgraph/generateData.ts\");\nvar _jsxFileName = \"/Users/harry/dev/visx/packages/visx-demo/src/sandboxes/visx-streamgraph/Example.tsx\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n/* eslint-disable react-hooks/rules-of-hooks */\n\n/**\n * Inspired by Mike Bostock's Streamgraph & Lee Byronâ€™s test data generator:\n * https://bl.ocks.org/mbostock/4060954\n */\n\n\n\n\n\n\n\n // constants\n\nvar NUM_LAYERS = 20;\nvar SAMPLES_PER_LAYER = 200;\nvar BUMPS_PER_LAYER = 10;\nvar BACKGROUND = '#ffdede'; // utils\n\nvar range = function range(n) {\n  return Array.from(new Array(n), function (_, i) {\n    return i;\n  });\n};\n\nvar keys = range(NUM_LAYERS); // scales\n\nvar xScale = Object(_visx_scale__WEBPACK_IMPORTED_MODULE_3__[\"scaleLinear\"])({\n  domain: [0, SAMPLES_PER_LAYER - 1]\n});\nvar yScale = Object(_visx_scale__WEBPACK_IMPORTED_MODULE_3__[\"scaleLinear\"])({\n  domain: [-30, 50]\n});\nvar colorScale = Object(_visx_scale__WEBPACK_IMPORTED_MODULE_3__[\"scaleOrdinal\"])({\n  domain: keys,\n  range: ['#ffc409', '#f14702', '#262d97', 'white', '#036ecd', '#9ecadd', '#51666e']\n});\nvar patternScale = Object(_visx_scale__WEBPACK_IMPORTED_MODULE_3__[\"scaleOrdinal\"])({\n  domain: keys,\n  range: ['mustard', 'cherry', 'navy', 'circles', 'circles', 'circles', 'circles']\n}); // accessors\n\nvar getY0 = function getY0(d) {\n  return yScale(d[0]);\n};\n\nvar getY1 = function getY1(d) {\n  return yScale(d[1]);\n};\n\nfunction Streamgraph(_ref) {\n  _s2();\n\n  var _this = this;\n\n  var width = _ref.width,\n      height = _ref.height,\n      _ref$animate = _ref.animate,\n      animate = _ref$animate === void 0 ? true : _ref$animate;\n  var forceUpdate = Object(_useForceUpdate__WEBPACK_IMPORTED_MODULE_6__[\"default\"])();\n\n  var handlePress = function handlePress() {\n    return forceUpdate();\n  };\n\n  if (width < 10) return null;\n  xScale.range([0, width]);\n  yScale.range([height, 0]); // generate layers in render to update on touch\n\n  var layers = Object(d3_array__WEBPACK_IMPORTED_MODULE_4__[\"transpose\"])(keys.map(function () {\n    return Object(_generateData__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(SAMPLES_PER_LAYER, BUMPS_PER_LAYER);\n  }));\n  return __jsx(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(_visx_pattern__WEBPACK_IMPORTED_MODULE_2__[\"PatternCircles\"], {\n    id: \"mustard\",\n    height: 40,\n    width: 40,\n    radius: 5,\n    fill: \"#036ecf\",\n    complement: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), __jsx(_visx_pattern__WEBPACK_IMPORTED_MODULE_2__[\"PatternWaves\"], {\n    id: \"cherry\",\n    height: 12,\n    width: 12,\n    fill: \"transparent\",\n    stroke: \"#232493\",\n    strokeWidth: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), __jsx(_visx_pattern__WEBPACK_IMPORTED_MODULE_2__[\"PatternCircles\"], {\n    id: \"navy\",\n    height: 60,\n    width: 60,\n    radius: 10,\n    fill: \"white\",\n    complement: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(_visx_pattern__WEBPACK_IMPORTED_MODULE_2__[\"PatternCircles\"], {\n    complement: true,\n    id: \"circles\",\n    height: 60,\n    width: 60,\n    radius: 10,\n    fill: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), __jsx(\"g\", {\n    onClick: handlePress,\n    onTouchStart: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(\"rect\", {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n    fill: BACKGROUND,\n    rx: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), __jsx(_visx_shape__WEBPACK_IMPORTED_MODULE_1__[\"Stack\"], {\n    data: layers,\n    keys: keys,\n    offset: \"wiggle\",\n    color: colorScale,\n    x: function x(_, i) {\n      return xScale(i);\n    },\n    y0: getY0,\n    y1: getY1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var _s = $RefreshSig$();\n\n    var stacks = _ref2.stacks,\n        path = _ref2.path;\n    return stacks.map(_s(function (stack) {\n      _s();\n\n      // Alternatively use renderprops <Spring to={{ d }}>{tweened => ...}</Spring>\n      var tweened = animate ? Object(react_spring__WEBPACK_IMPORTED_MODULE_5__[\"useSpring\"])({\n        d: path(stack)\n      }) : {\n        d: path(stack)\n      };\n      var color = colorScale(stack.key);\n      var pattern = patternScale(stack.key);\n      return __jsx(\"g\", {\n        key: \"series-\".concat(stack.key),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, __jsx(react_spring__WEBPACK_IMPORTED_MODULE_5__[\"animated\"].path, {\n        d: tweened.d || '',\n        fill: color,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }), __jsx(react_spring__WEBPACK_IMPORTED_MODULE_5__[\"animated\"].path, {\n        d: tweened.d || '',\n        fill: \"url(#\".concat(pattern, \")\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }));\n    }, \"osm+04XShAFeF/DrWOpJZHjaaNg=\", false, function () {\n      return [react_spring__WEBPACK_IMPORTED_MODULE_5__[\"useSpring\"]];\n    }));\n  })));\n}\n\n_s2(Streamgraph, \"sHgi24HeNFmIAUaNZ2Exq4PrzeE=\", false, function () {\n  return [_useForceUpdate__WEBPACK_IMPORTED_MODULE_6__[\"default\"]];\n});\n\n_c = Streamgraph;\n\ntry {\n  // @ts-ignore\n  Example.displayName = \"Example\"; // @ts-ignore\n\n  Example.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Example\",\n    \"props\": {\n      \"width\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"width\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"number\"\n        }\n      },\n      \"height\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"height\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"number\"\n        }\n      },\n      \"animate\": {\n        \"defaultValue\": {\n          value: true\n        },\n        \"description\": \"\",\n        \"name\": \"animate\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean | undefined\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/sandboxes/visx-streamgraph/Example.tsx#Example\"] = {\n      docgenInfo: Example.__docgenInfo,\n      name: \"Example\",\n      path: \"src/sandboxes/visx-streamgraph/Example.tsx#Example\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\nvar _c;\n\n$RefreshReg$(_c, \"Streamgraph\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/webpack/buildin/harmony-module.js */ \"../../node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/sandboxes/visx-streamgraph/Example.tsx\n");

/***/ })

})