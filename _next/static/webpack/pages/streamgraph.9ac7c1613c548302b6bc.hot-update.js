webpackHotUpdate_N_E("pages/streamgraph",{

/***/ "../../node_modules/@babel/runtime/helpers/esm/extends.js":
false,

/***/ "../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
false,

/***/ "../../node_modules/raw-loader/dist/cjs.js!./src/sandboxes/visx-streamgraph/Example.tsx":
/*!**************************************************************************************************************!*\
  !*** /Users/harry/dev/visx/node_modules/raw-loader/dist/cjs.js!./src/sandboxes/visx-streamgraph/Example.tsx ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"// Inspired by Mike Bostock's Streamgraph & Lee Byronâ€™s test data generator.\\n// https://bl.ocks.org/mbostock/4060954\\n// Inspired by Mike Bostocks Streamgraph bumps\\n// https://bl.ocks.org/mbostock/4060954\\n\\nimport React, { useState } from 'react';\\nimport { Stack } from '@visx/shape';\\nimport { PatternCircles, PatternWaves } from '@visx/pattern';\\nimport { scaleLinear, scaleOrdinal } from '@visx/scale';\\nimport { transpose } from 'd3-array';\\nimport { ShowProvidedProps } from '../../types';\\n\\n// utils\\nconst range = (n: number) => Array.from(new Array(n), (d, i) => i);\\n\\nconst bump = (array: number[], n: number) => {\\n  const x = 1 / (0.1 + Math.random());\\n  const y = 2 * Math.random() - 0.5;\\n  const z = 10 / (0.1 + Math.random());\\n  for (let i = 0; i < n; i += 1) {\\n    const w = (i / n - y) * z;\\n    array[i] += x * Math.exp(-w * w);\\n  }\\n};\\n\\nconst bumps = (n: number, m: number): number[] => {\\n  const arr = [];\\n  let i: number;\\n  for (i = 0; i < n; i += 1) arr[i] = 0;\\n  for (i = 0; i < m; i += 1) bump(arr, n);\\n  return arr;\\n};\\n\\n// constants\\nconst NUM_LAYERS = 20;\\nconst SAMPLES_PER_LAYER = 200;\\nconst BUMPS_PER_LAYER = 10;\\n\\nconst keys = range(NUM_LAYERS);\\n\\n// scales\\nconst yScale = scaleLinear<number>({\\n  domain: [-30, 50],\\n});\\nconst xScale = scaleLinear<number>({\\n  domain: [0, SAMPLES_PER_LAYER - 1],\\n});\\nconst colorScale = scaleOrdinal<number, string>({\\n  domain: keys,\\n  range: ['#ffc409', '#f14702', '#262d97', 'white', '#036ecd', '#9ecadd', '#51666e'],\\n});\\nconst patternScale = scaleOrdinal<number, string>({\\n  domain: keys,\\n  range: ['mustard', 'cherry', 'navy', 'circles', 'circles', 'circles', 'circles'],\\n});\\n\\nfunction useForceUpdate() {\\n  const [, setValue] = useState<number>(0);\\n  return () => setValue(value => value + 1); // update state to force render\\n}\\n\\nexport default function Streamgraph({ width, height }: ShowProvidedProps) {\\n  const forceUpdate = useForceUpdate();\\n\\n  if (width < 10) return null;\\n\\n  xScale.range([0, width]);\\n  yScale.range([height, 0]);\\n\\n  // generate layers in render to update on touch\\n  const layers = transpose<number>(keys.map(() => bumps(SAMPLES_PER_LAYER, BUMPS_PER_LAYER)));\\n\\n  return (\\n    <svg width={width} height={height}>\\n      <PatternCircles id=\\\"mustard\\\" height={40} width={40} radius={5} fill=\\\"#036ecf\\\" complement />\\n      <PatternWaves\\n        id=\\\"cherry\\\"\\n        height={12}\\n        width={12}\\n        fill=\\\"transparent\\\"\\n        stroke=\\\"#232493\\\"\\n        strokeWidth={1}\\n      />\\n      <PatternCircles id=\\\"navy\\\" height={60} width={60} radius={10} fill=\\\"white\\\" complement />\\n      <PatternCircles\\n        complement\\n        id=\\\"circles\\\"\\n        height={60}\\n        width={60}\\n        radius={10}\\n        fill=\\\"transparent\\\"\\n      />\\n      <g onClick={() => forceUpdate()} onTouchStart={() => forceUpdate()}>\\n        <rect x={0} y={0} width={width} height={height} fill=\\\"#ffdede\\\" rx={14} />\\n        <Stack<number[], number>\\n          data={layers}\\n          keys={keys}\\n          offset=\\\"wiggle\\\"\\n          color={colorScale}\\n          x={(d, i) => xScale(i)}\\n          y0={d => yScale(d[0])}\\n          y1={d => yScale(d[1])}\\n        >\\n          {({ stacks, path }) =>\\n            stacks.map(stack => {\\n              const d = path(stack) || '';\\n              const color = colorScale(stack.key);\\n              const pattern = patternScale(stack.key);\\n              return (\\n                <g key={`series-${stack.key}`}>\\n                  <path d={d} fill={color} />\\n                  {pattern !== 'circles' && <path d={d} fill={`url(#${pattern})`} />}\\n                </g>\\n              );\\n            })\\n          }\\n        </Stack>\\n      </g>\\n    </svg>\\n  );\\n}\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3NhbmRib3hlcy92aXN4LXN0cmVhbWdyYXBoL0V4YW1wbGUudHN4P2I4MGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSxpU0FBa08sV0FBVyxjQUFjLFVBQVUsUUFBUSxvQkFBb0IsVUFBVSwrQkFBK0Isc0JBQXNCLFVBQVUsNEJBQTRCLG9CQUFvQixVQUFVLFlBQVksaUJBQWlCLFVBQVUsb0JBQW9CLG9CQUFvQixpRkFBaUYsa0RBQWtELHdDQUF3QyxzQ0FBc0MseUNBQXlDLG1CQUFtQixPQUFPLFVBQVUsZ0NBQWdDLHVDQUF1QyxLQUFLLElBQUksdURBQXVELG1CQUFtQixrQkFBa0IsZUFBZSxPQUFPLG9CQUFvQixlQUFlLE9BQU8sc0JBQXNCLGVBQWUsSUFBSSx3Q0FBd0MsZ0NBQWdDLDZCQUE2QixtQ0FBbUMsbURBQW1ELHlCQUF5QixFQUFFLHNDQUFzQywwQ0FBMEMsRUFBRSxtREFBbUQsMkdBQTJHLEVBQUUscURBQXFELHlHQUF5RyxFQUFFLCtCQUErQiw2Q0FBNkMsOENBQThDLG1DQUFtQyx5Q0FBeUMsZ0JBQWdCLHNCQUFzQix5Q0FBeUMsa0NBQWtDLCtCQUErQiw4QkFBOEIscUpBQXFKLGdDQUFnQyxNQUFNLFNBQVMsT0FBTyxnREFBZ0QsR0FBRyxRQUFRLEdBQUcsU0FBUyxFQUFFLDZGQUE2RixHQUFHLGlCQUFpQixHQUFHLGlGQUFpRixFQUFFLHNEQUFzRCxHQUFHLFFBQVEsR0FBRyxTQUFTLEdBQUcsa0hBQWtILEdBQUcsaUJBQWlCLEdBQUcsa0JBQWtCLEdBQUcsNERBQTRELG9CQUFvQixlQUFlLG9CQUFvQixvQkFBb0IsRUFBRSxJQUFJLEVBQUUsUUFBUSxNQUFNLFNBQVMsT0FBTyxzQkFBc0IsR0FBRyx1REFBdUQsT0FBTyxrQkFBa0IsS0FBSyxnREFBZ0QsV0FBVyxlQUFlLG9CQUFvQixnQkFBZ0Isa0JBQWtCLGdCQUFnQixrQkFBa0Isd0JBQXdCLEVBQUUsZUFBZSx1Q0FBdUMsNENBQTRDLG9EQUFvRCx3REFBd0Qsa0RBQWtELFVBQVUsVUFBVSxFQUFFLDhCQUE4QixFQUFFLE9BQU8sTUFBTSx3QkFBd0Isa0NBQWtDLEVBQUUsT0FBTyxRQUFRLFFBQVEsR0FBRyxJQUFJLHdDQUF3QyxlQUFlLGNBQWMsZ0RBQWdELEdBQUcsR0FBRyIsImZpbGUiOiIuLi8uLi9ub2RlX21vZHVsZXMvcmF3LWxvYWRlci9kaXN0L2Nqcy5qcyEuL3NyYy9zYW5kYm94ZXMvdmlzeC1zdHJlYW1ncmFwaC9FeGFtcGxlLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiLy8gSW5zcGlyZWQgYnkgTWlrZSBCb3N0b2NrJ3MgU3RyZWFtZ3JhcGggJiBMZWUgQnlyb27igJlzIHRlc3QgZGF0YSBnZW5lcmF0b3IuXFxuLy8gaHR0cHM6Ly9ibC5vY2tzLm9yZy9tYm9zdG9jay80MDYwOTU0XFxuLy8gSW5zcGlyZWQgYnkgTWlrZSBCb3N0b2NrcyBTdHJlYW1ncmFwaCBidW1wc1xcbi8vIGh0dHBzOi8vYmwub2Nrcy5vcmcvbWJvc3RvY2svNDA2MDk1NFxcblxcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcXG5pbXBvcnQgeyBTdGFjayB9IGZyb20gJ0B2aXN4L3NoYXBlJztcXG5pbXBvcnQgeyBQYXR0ZXJuQ2lyY2xlcywgUGF0dGVybldhdmVzIH0gZnJvbSAnQHZpc3gvcGF0dGVybic7XFxuaW1wb3J0IHsgc2NhbGVMaW5lYXIsIHNjYWxlT3JkaW5hbCB9IGZyb20gJ0B2aXN4L3NjYWxlJztcXG5pbXBvcnQgeyB0cmFuc3Bvc2UgfSBmcm9tICdkMy1hcnJheSc7XFxuaW1wb3J0IHsgU2hvd1Byb3ZpZGVkUHJvcHMgfSBmcm9tICcuLi8uLi90eXBlcyc7XFxuXFxuLy8gdXRpbHNcXG5jb25zdCByYW5nZSA9IChuOiBudW1iZXIpID0+IEFycmF5LmZyb20obmV3IEFycmF5KG4pLCAoZCwgaSkgPT4gaSk7XFxuXFxuY29uc3QgYnVtcCA9IChhcnJheTogbnVtYmVyW10sIG46IG51bWJlcikgPT4ge1xcbiAgY29uc3QgeCA9IDEgLyAoMC4xICsgTWF0aC5yYW5kb20oKSk7XFxuICBjb25zdCB5ID0gMiAqIE1hdGgucmFuZG9tKCkgLSAwLjU7XFxuICBjb25zdCB6ID0gMTAgLyAoMC4xICsgTWF0aC5yYW5kb20oKSk7XFxuICBmb3IgKGxldCBpID0gMDsgaSA8IG47IGkgKz0gMSkge1xcbiAgICBjb25zdCB3ID0gKGkgLyBuIC0geSkgKiB6O1xcbiAgICBhcnJheVtpXSArPSB4ICogTWF0aC5leHAoLXcgKiB3KTtcXG4gIH1cXG59O1xcblxcbmNvbnN0IGJ1bXBzID0gKG46IG51bWJlciwgbTogbnVtYmVyKTogbnVtYmVyW10gPT4ge1xcbiAgY29uc3QgYXJyID0gW107XFxuICBsZXQgaTogbnVtYmVyO1xcbiAgZm9yIChpID0gMDsgaSA8IG47IGkgKz0gMSkgYXJyW2ldID0gMDtcXG4gIGZvciAoaSA9IDA7IGkgPCBtOyBpICs9IDEpIGJ1bXAoYXJyLCBuKTtcXG4gIHJldHVybiBhcnI7XFxufTtcXG5cXG4vLyBjb25zdGFudHNcXG5jb25zdCBOVU1fTEFZRVJTID0gMjA7XFxuY29uc3QgU0FNUExFU19QRVJfTEFZRVIgPSAyMDA7XFxuY29uc3QgQlVNUFNfUEVSX0xBWUVSID0gMTA7XFxuXFxuY29uc3Qga2V5cyA9IHJhbmdlKE5VTV9MQVlFUlMpO1xcblxcbi8vIHNjYWxlc1xcbmNvbnN0IHlTY2FsZSA9IHNjYWxlTGluZWFyPG51bWJlcj4oe1xcbiAgZG9tYWluOiBbLTMwLCA1MF0sXFxufSk7XFxuY29uc3QgeFNjYWxlID0gc2NhbGVMaW5lYXI8bnVtYmVyPih7XFxuICBkb21haW46IFswLCBTQU1QTEVTX1BFUl9MQVlFUiAtIDFdLFxcbn0pO1xcbmNvbnN0IGNvbG9yU2NhbGUgPSBzY2FsZU9yZGluYWw8bnVtYmVyLCBzdHJpbmc+KHtcXG4gIGRvbWFpbjoga2V5cyxcXG4gIHJhbmdlOiBbJyNmZmM0MDknLCAnI2YxNDcwMicsICcjMjYyZDk3JywgJ3doaXRlJywgJyMwMzZlY2QnLCAnIzllY2FkZCcsICcjNTE2NjZlJ10sXFxufSk7XFxuY29uc3QgcGF0dGVyblNjYWxlID0gc2NhbGVPcmRpbmFsPG51bWJlciwgc3RyaW5nPih7XFxuICBkb21haW46IGtleXMsXFxuICByYW5nZTogWydtdXN0YXJkJywgJ2NoZXJyeScsICduYXZ5JywgJ2NpcmNsZXMnLCAnY2lyY2xlcycsICdjaXJjbGVzJywgJ2NpcmNsZXMnXSxcXG59KTtcXG5cXG5mdW5jdGlvbiB1c2VGb3JjZVVwZGF0ZSgpIHtcXG4gIGNvbnN0IFssIHNldFZhbHVlXSA9IHVzZVN0YXRlPG51bWJlcj4oMCk7XFxuICByZXR1cm4gKCkgPT4gc2V0VmFsdWUodmFsdWUgPT4gdmFsdWUgKyAxKTsgLy8gdXBkYXRlIHN0YXRlIHRvIGZvcmNlIHJlbmRlclxcbn1cXG5cXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTdHJlYW1ncmFwaCh7IHdpZHRoLCBoZWlnaHQgfTogU2hvd1Byb3ZpZGVkUHJvcHMpIHtcXG4gIGNvbnN0IGZvcmNlVXBkYXRlID0gdXNlRm9yY2VVcGRhdGUoKTtcXG5cXG4gIGlmICh3aWR0aCA8IDEwKSByZXR1cm4gbnVsbDtcXG5cXG4gIHhTY2FsZS5yYW5nZShbMCwgd2lkdGhdKTtcXG4gIHlTY2FsZS5yYW5nZShbaGVpZ2h0LCAwXSk7XFxuXFxuICAvLyBnZW5lcmF0ZSBsYXllcnMgaW4gcmVuZGVyIHRvIHVwZGF0ZSBvbiB0b3VjaFxcbiAgY29uc3QgbGF5ZXJzID0gdHJhbnNwb3NlPG51bWJlcj4oa2V5cy5tYXAoKCkgPT4gYnVtcHMoU0FNUExFU19QRVJfTEFZRVIsIEJVTVBTX1BFUl9MQVlFUikpKTtcXG5cXG4gIHJldHVybiAoXFxuICAgIDxzdmcgd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0+XFxuICAgICAgPFBhdHRlcm5DaXJjbGVzIGlkPVxcXCJtdXN0YXJkXFxcIiBoZWlnaHQ9ezQwfSB3aWR0aD17NDB9IHJhZGl1cz17NX0gZmlsbD1cXFwiIzAzNmVjZlxcXCIgY29tcGxlbWVudCAvPlxcbiAgICAgIDxQYXR0ZXJuV2F2ZXNcXG4gICAgICAgIGlkPVxcXCJjaGVycnlcXFwiXFxuICAgICAgICBoZWlnaHQ9ezEyfVxcbiAgICAgICAgd2lkdGg9ezEyfVxcbiAgICAgICAgZmlsbD1cXFwidHJhbnNwYXJlbnRcXFwiXFxuICAgICAgICBzdHJva2U9XFxcIiMyMzI0OTNcXFwiXFxuICAgICAgICBzdHJva2VXaWR0aD17MX1cXG4gICAgICAvPlxcbiAgICAgIDxQYXR0ZXJuQ2lyY2xlcyBpZD1cXFwibmF2eVxcXCIgaGVpZ2h0PXs2MH0gd2lkdGg9ezYwfSByYWRpdXM9ezEwfSBmaWxsPVxcXCJ3aGl0ZVxcXCIgY29tcGxlbWVudCAvPlxcbiAgICAgIDxQYXR0ZXJuQ2lyY2xlc1xcbiAgICAgICAgY29tcGxlbWVudFxcbiAgICAgICAgaWQ9XFxcImNpcmNsZXNcXFwiXFxuICAgICAgICBoZWlnaHQ9ezYwfVxcbiAgICAgICAgd2lkdGg9ezYwfVxcbiAgICAgICAgcmFkaXVzPXsxMH1cXG4gICAgICAgIGZpbGw9XFxcInRyYW5zcGFyZW50XFxcIlxcbiAgICAgIC8+XFxuICAgICAgPGcgb25DbGljaz17KCkgPT4gZm9yY2VVcGRhdGUoKX0gb25Ub3VjaFN0YXJ0PXsoKSA9PiBmb3JjZVVwZGF0ZSgpfT5cXG4gICAgICAgIDxyZWN0IHg9ezB9IHk9ezB9IHdpZHRoPXt3aWR0aH0gaGVpZ2h0PXtoZWlnaHR9IGZpbGw9XFxcIiNmZmRlZGVcXFwiIHJ4PXsxNH0gLz5cXG4gICAgICAgIDxTdGFjazxudW1iZXJbXSwgbnVtYmVyPlxcbiAgICAgICAgICBkYXRhPXtsYXllcnN9XFxuICAgICAgICAgIGtleXM9e2tleXN9XFxuICAgICAgICAgIG9mZnNldD1cXFwid2lnZ2xlXFxcIlxcbiAgICAgICAgICBjb2xvcj17Y29sb3JTY2FsZX1cXG4gICAgICAgICAgeD17KGQsIGkpID0+IHhTY2FsZShpKX1cXG4gICAgICAgICAgeTA9e2QgPT4geVNjYWxlKGRbMF0pfVxcbiAgICAgICAgICB5MT17ZCA9PiB5U2NhbGUoZFsxXSl9XFxuICAgICAgICA+XFxuICAgICAgICAgIHsoeyBzdGFja3MsIHBhdGggfSkgPT5cXG4gICAgICAgICAgICBzdGFja3MubWFwKHN0YWNrID0+IHtcXG4gICAgICAgICAgICAgIGNvbnN0IGQgPSBwYXRoKHN0YWNrKSB8fCAnJztcXG4gICAgICAgICAgICAgIGNvbnN0IGNvbG9yID0gY29sb3JTY2FsZShzdGFjay5rZXkpO1xcbiAgICAgICAgICAgICAgY29uc3QgcGF0dGVybiA9IHBhdHRlcm5TY2FsZShzdGFjay5rZXkpO1xcbiAgICAgICAgICAgICAgcmV0dXJuIChcXG4gICAgICAgICAgICAgICAgPGcga2V5PXtgc2VyaWVzLSR7c3RhY2sua2V5fWB9PlxcbiAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9e2R9IGZpbGw9e2NvbG9yfSAvPlxcbiAgICAgICAgICAgICAgICAgIHtwYXR0ZXJuICE9PSAnY2lyY2xlcycgJiYgPHBhdGggZD17ZH0gZmlsbD17YHVybCgjJHtwYXR0ZXJufSlgfSAvPn1cXG4gICAgICAgICAgICAgICAgPC9nPlxcbiAgICAgICAgICAgICAgKTtcXG4gICAgICAgICAgICB9KVxcbiAgICAgICAgICB9XFxuICAgICAgICA8L1N0YWNrPlxcbiAgICAgIDwvZz5cXG4gICAgPC9zdmc+XFxuICApO1xcbn1cXG5cIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/raw-loader/dist/cjs.js!./src/sandboxes/visx-streamgraph/Example.tsx\n");

/***/ }),

/***/ "../../node_modules/react-spring/web.js":
false,

/***/ "./src/sandboxes/visx-streamgraph/Example.tsx":
/*!****************************************************!*\
  !*** ./src/sandboxes/visx-streamgraph/Example.tsx ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Streamgraph; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _visx_shape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @visx/shape */ \"../visx-shape/esm/index.js\");\n/* harmony import */ var _visx_pattern__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @visx/pattern */ \"../visx-pattern/esm/index.js\");\n/* harmony import */ var _visx_scale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @visx/scale */ \"../visx-scale/esm/index.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ \"../../node_modules/d3-array/src/index.js\");\nvar _s = $RefreshSig$(),\n    _jsxFileName = \"/Users/harry/dev/visx/packages/visx-demo/src/sandboxes/visx-streamgraph/Example.tsx\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n// Inspired by Mike Bostock's Streamgraph & Lee Byronâ€™s test data generator.\n// https://bl.ocks.org/mbostock/4060954\n// Inspired by Mike Bostocks Streamgraph bumps\n// https://bl.ocks.org/mbostock/4060954\n\n\n\n\n\n\n// utils\nvar range = function range(n) {\n  return Array.from(new Array(n), function (d, i) {\n    return i;\n  });\n};\n\nvar bump = function bump(array, n) {\n  var x = 1 / (0.1 + Math.random());\n  var y = 2 * Math.random() - 0.5;\n  var z = 10 / (0.1 + Math.random());\n\n  for (var i = 0; i < n; i += 1) {\n    var w = (i / n - y) * z;\n    array[i] += x * Math.exp(-w * w);\n  }\n};\n\nvar bumps = function bumps(n, m) {\n  var arr = [];\n  var i;\n\n  for (i = 0; i < n; i += 1) {\n    arr[i] = 0;\n  }\n\n  for (i = 0; i < m; i += 1) {\n    bump(arr, n);\n  }\n\n  return arr;\n}; // constants\n\n\nvar NUM_LAYERS = 20;\nvar SAMPLES_PER_LAYER = 200;\nvar BUMPS_PER_LAYER = 10;\nvar keys = range(NUM_LAYERS); // scales\n\nvar yScale = Object(_visx_scale__WEBPACK_IMPORTED_MODULE_3__[\"scaleLinear\"])({\n  domain: [-30, 50]\n});\nvar xScale = Object(_visx_scale__WEBPACK_IMPORTED_MODULE_3__[\"scaleLinear\"])({\n  domain: [0, SAMPLES_PER_LAYER - 1]\n});\nvar colorScale = Object(_visx_scale__WEBPACK_IMPORTED_MODULE_3__[\"scaleOrdinal\"])({\n  domain: keys,\n  range: ['#ffc409', '#f14702', '#262d97', 'white', '#036ecd', '#9ecadd', '#51666e']\n});\nvar patternScale = Object(_visx_scale__WEBPACK_IMPORTED_MODULE_3__[\"scaleOrdinal\"])({\n  domain: keys,\n  range: ['mustard', 'cherry', 'navy', 'circles', 'circles', 'circles', 'circles']\n});\n\nfunction useForceUpdate() {\n  _s();\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(0),\n      setValue = _useState[1];\n\n  return function () {\n    return setValue(function (value) {\n      return value + 1;\n    });\n  }; // update state to force render\n}\n\n_s(useForceUpdate, \"1qXTmAp8MY1p96ayC5CBvAOoOJs=\");\n\nfunction Streamgraph(_ref) {\n  _s2();\n\n  var _this = this;\n\n  var width = _ref.width,\n      height = _ref.height;\n  var forceUpdate = useForceUpdate();\n  if (width < 10) return null;\n  xScale.range([0, width]);\n  yScale.range([height, 0]); // generate layers in render to update on touch\n\n  var layers = Object(d3_array__WEBPACK_IMPORTED_MODULE_4__[\"transpose\"])(keys.map(function () {\n    return bumps(SAMPLES_PER_LAYER, BUMPS_PER_LAYER);\n  }));\n  return __jsx(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(_visx_pattern__WEBPACK_IMPORTED_MODULE_2__[\"PatternCircles\"], {\n    id: \"mustard\",\n    height: 40,\n    width: 40,\n    radius: 5,\n    fill: \"#036ecf\",\n    complement: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), __jsx(_visx_pattern__WEBPACK_IMPORTED_MODULE_2__[\"PatternWaves\"], {\n    id: \"cherry\",\n    height: 12,\n    width: 12,\n    fill: \"transparent\",\n    stroke: \"#232493\",\n    strokeWidth: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), __jsx(_visx_pattern__WEBPACK_IMPORTED_MODULE_2__[\"PatternCircles\"], {\n    id: \"navy\",\n    height: 60,\n    width: 60,\n    radius: 10,\n    fill: \"white\",\n    complement: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), __jsx(_visx_pattern__WEBPACK_IMPORTED_MODULE_2__[\"PatternCircles\"], {\n    complement: true,\n    id: \"circles\",\n    height: 60,\n    width: 60,\n    radius: 10,\n    fill: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), __jsx(\"g\", {\n    onClick: function onClick() {\n      return forceUpdate();\n    },\n    onTouchStart: function onTouchStart() {\n      return forceUpdate();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(\"rect\", {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n    fill: \"#ffdede\",\n    rx: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), __jsx(_visx_shape__WEBPACK_IMPORTED_MODULE_1__[\"Stack\"], {\n    data: layers,\n    keys: keys,\n    offset: \"wiggle\",\n    color: colorScale,\n    x: function x(d, i) {\n      return xScale(i);\n    },\n    y0: function y0(d) {\n      return yScale(d[0]);\n    },\n    y1: function y1(d) {\n      return yScale(d[1]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var stacks = _ref2.stacks,\n        path = _ref2.path;\n    return stacks.map(function (stack) {\n      var d = path(stack) || '';\n      var color = colorScale(stack.key);\n      var pattern = patternScale(stack.key);\n      return __jsx(\"g\", {\n        key: \"series-\".concat(stack.key),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, __jsx(\"path\", {\n        d: d,\n        fill: color,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }), pattern !== 'circles' && __jsx(\"path\", {\n        d: d,\n        fill: \"url(#\".concat(pattern, \")\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 45\n        }\n      }));\n    });\n  })));\n}\n\n_s2(Streamgraph, \"sHgi24HeNFmIAUaNZ2Exq4PrzeE=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = Streamgraph;\n\ntry {\n  // @ts-ignore\n  Example.displayName = \"Example\"; // @ts-ignore\n\n  Example.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Example\",\n    \"props\": {\n      \"width\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"width\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"number\"\n        }\n      },\n      \"height\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"height\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"number\"\n        }\n      },\n      \"margin\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"margin\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"MarginShape | undefined\"\n        }\n      },\n      \"events\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"events\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean | undefined\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/sandboxes/visx-streamgraph/Example.tsx#Example\"] = {\n      docgenInfo: Example.__docgenInfo,\n      name: \"Example\",\n      path: \"src/sandboxes/visx-streamgraph/Example.tsx#Example\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\nvar _c;\n\n$RefreshReg$(_c, \"Streamgraph\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../node_modules/webpack/buildin/harmony-module.js */ \"../../node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3NhbmRib3hlcy92aXN4LXN0cmVhbWdyYXBoL0V4YW1wbGUudHN4PzViNGMiXSwibmFtZXMiOlsicmFuZ2UiLCJuIiwiQXJyYXkiLCJmcm9tIiwiZCIsImkiLCJidW1wIiwiYXJyYXkiLCJ4IiwiTWF0aCIsInJhbmRvbSIsInkiLCJ6IiwidyIsImV4cCIsImJ1bXBzIiwibSIsImFyciIsIk5VTV9MQVlFUlMiLCJTQU1QTEVTX1BFUl9MQVlFUiIsIkJVTVBTX1BFUl9MQVlFUiIsImtleXMiLCJ5U2NhbGUiLCJzY2FsZUxpbmVhciIsImRvbWFpbiIsInhTY2FsZSIsImNvbG9yU2NhbGUiLCJzY2FsZU9yZGluYWwiLCJwYXR0ZXJuU2NhbGUiLCJ1c2VGb3JjZVVwZGF0ZSIsInVzZVN0YXRlIiwic2V0VmFsdWUiLCJ2YWx1ZSIsIlN0cmVhbWdyYXBoIiwid2lkdGgiLCJoZWlnaHQiLCJmb3JjZVVwZGF0ZSIsImxheWVycyIsInRyYW5zcG9zZSIsIm1hcCIsInN0YWNrcyIsInBhdGgiLCJzdGFjayIsImNvbG9yIiwia2V5IiwicGF0dGVybiIsIkV4YW1wbGUiLCJkaXNwbGF5TmFtZSIsIl9fZG9jZ2VuSW5mbyIsIlNUT1JZQk9PS19SRUFDVF9DTEFTU0VTIiwiZG9jZ2VuSW5mbyIsIm5hbWUiLCJfX3JlYWN0X2RvY2dlbl90eXBlc2NyaXB0X2xvYWRlcl9lcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBLElBQU1BLEtBQUssR0FBRyxTQUFSQSxLQUFRLENBQUNDLENBQUQ7QUFBQSxTQUFlQyxLQUFLLENBQUNDLElBQU4sQ0FBVyxJQUFJRCxLQUFKLENBQVVELENBQVYsQ0FBWCxFQUF5QixVQUFDRyxDQUFELEVBQUlDLENBQUo7QUFBQSxXQUFVQSxDQUFWO0FBQUEsR0FBekIsQ0FBZjtBQUFBLENBQWQ7O0FBRUEsSUFB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ZSxFQUF2QztBQUEyQyxnQkFBUSxPQUFuRDtBQUE0RCxvQkFBWSxJQUF4RTtBQUE4RSxnQkFBUTtBQUFFLGtCQUFRO0FBQVY7QUFBdEYsT0FBWDtBQUF5SCxnQkFBVTtBQUFFLHdCQUFnQixJQUFsQjtBQUF3Qix1QkFBZSxFQUF2QztBQUEyQyxnQkFBUSxRQUFuRDtBQUE2RCxvQkFBWSxJQUF6RTtBQUErRSxnQkFBUTtBQUFFLGtCQUFRO0FBQVY7QUFBdkYsT0FBbkk7QUFBa1AsZ0JBQVU7QUFBRSx3QkFBZ0IsSUFBbEI7QUFBd0IsdUJBQWUsRUFBdkM7QUFBMkMsZ0JBQVEsUUFBbkQ7QUFBNkQsb0JBQVksS0FBekU7QUFBZ0YsZ0JBQVE7QUFBRSxrQkFBUTtBQUFWO0FBQXhGLE9BQTVQO0FBQTZYLGdCQUFVO0FBQUUsd0JBQWdCLElBQWxCO0FBQXdCLHVCQUFlLEVBQXZDO0FBQTJDLGdCQUFRLFFBQW5EO0FBQTZELG9CQUFZLEtBQXpFO0FBQWdGLGdCQUFRO0FBQUUsa0JBQVE7QUFBVjtBQUF4RjtBQUF2WTtBQUF4RCxHQUF2QixDQUpBLENBS0E7O0FBQ0EsTUFBSSxPQUFPQyx1QkFBUCxLQUFtQyxXQUF2QyxFQUNJO0FBQ0FBLDJCQUF1QixDQUFDLG9EQUFELENBQXZCLEdBQWdGO0FBQUVDLGdCQUFVLEVBQUVKLE9BQU8sQ0FBQ0UsWUFBdEI7QUFBb0NHLFVBQUksRUFBRSxTQUExQztBQUFxRFYsVUFBSSxFQUFFO0FBQTNELEtBQWhGO0FBQ1AsQ0FURCxDQVVBLE9BQU9XLHNDQUFQLEVBQStDLENBQUciLCJmaWxlIjoiLi9zcmMvc2FuZGJveGVzL3Zpc3gtc3RyZWFtZ3JhcGgvRXhhbXBsZS50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbnNwaXJlZCBieSBNaWtlIEJvc3RvY2sncyBTdHJlYW1ncmFwaCAmIExlZSBCeXJvbuKAmXMgdGVzdCBkYXRhIGdlbmVyYXRvci5cbi8vIGh0dHBzOi8vYmwub2Nrcy5vcmcvbWJvc3RvY2svNDA2MDk1NFxuLy8gSW5zcGlyZWQgYnkgTWlrZSBCb3N0b2NrcyBTdHJlYW1ncmFwaCBidW1wc1xuLy8gaHR0cHM6Ly9ibC5vY2tzLm9yZy9tYm9zdG9jay80MDYwOTU0XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0YWNrIH0gZnJvbSAnQHZpc3gvc2hhcGUnO1xuaW1wb3J0IHsgUGF0dGVybkNpcmNsZXMsIFBhdHRlcm5XYXZlcyB9IGZyb20gJ0B2aXN4L3BhdHRlcm4nO1xuaW1wb3J0IHsgc2NhbGVMaW5lYXIsIHNjYWxlT3JkaW5hbCB9IGZyb20gJ0B2aXN4L3NjYWxlJztcbmltcG9ydCB7IHRyYW5zcG9zZSB9IGZyb20gJ2QzLWFycmF5JztcbmltcG9ydCB7IFNob3dQcm92aWRlZFByb3BzIH0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuXG4vLyB1dGlsc1xuY29uc3QgcmFuZ2UgPSAobjogbnVtYmVyKSA9PiBBcnJheS5mcm9tKG5ldyBBcnJheShuKSwgKGQsIGkpID0+IGkpO1xuXG5jb25zdCBidW1wID0gKGFycmF5OiBudW1iZXJbXSwgbjogbnVtYmVyKSA9PiB7XG4gIGNvbnN0IHggPSAxIC8gKDAuMSArIE1hdGgucmFuZG9tKCkpO1xuICBjb25zdCB5ID0gMiAqIE1hdGgucmFuZG9tKCkgLSAwLjU7XG4gIGNvbnN0IHogPSAxMCAvICgwLjEgKyBNYXRoLnJhbmRvbSgpKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBuOyBpICs9IDEpIHtcbiAgICBjb25zdCB3ID0gKGkgLyBuIC0geSkgKiB6O1xuICAgIGFycmF5W2ldICs9IHggKiBNYXRoLmV4cCgtdyAqIHcpO1xuICB9XG59O1xuXG5jb25zdCBidW1wcyA9IChuOiBudW1iZXIsIG06IG51bWJlcik6IG51bWJlcltdID0+IHtcbiAgY29uc3QgYXJyID0gW107XG4gIGxldCBpOiBudW1iZXI7XG4gIGZvciAoaSA9IDA7IGkgPCBuOyBpICs9IDEpIGFycltpXSA9IDA7XG4gIGZvciAoaSA9IDA7IGkgPCBtOyBpICs9IDEpIGJ1bXAoYXJyLCBuKTtcbiAgcmV0dXJuIGFycjtcbn07XG5cbi8vIGNvbnN0YW50c1xuY29uc3QgTlVNX0xBWUVSUyA9IDIwO1xuY29uc3QgU0FNUExFU19QRVJfTEFZRVIgPSAyMDA7XG5jb25zdCBCVU1QU19QRVJfTEFZRVIgPSAxMDtcblxuY29uc3Qga2V5cyA9IHJhbmdlKE5VTV9MQVlFUlMpO1xuXG4vLyBzY2FsZXNcbmNvbnN0IHlTY2FsZSA9IHNjYWxlTGluZWFyPG51bWJlcj4oe1xuICBkb21haW46IFstMzAsIDUwXSxcbn0pO1xuY29uc3QgeFNjYWxlID0gc2NhbGVMaW5lYXI8bnVtYmVyPih7XG4gIGRvbWFpbjogWzAsIFNBTVBMRVNfUEVSX0xBWUVSIC0gMV0sXG59KTtcbmNvbnN0IGNvbG9yU2NhbGUgPSBzY2FsZU9yZGluYWw8bnVtYmVyLCBzdHJpbmc+KHtcbiAgZG9tYWluOiBrZXlzLFxuICByYW5nZTogWycjZmZjNDA5JywgJyNmMTQ3MDInLCAnIzI2MmQ5NycsICd3aGl0ZScsICcjMDM2ZWNkJywgJyM5ZWNhZGQnLCAnIzUxNjY2ZSddLFxufSk7XG5jb25zdCBwYXR0ZXJuU2NhbGUgPSBzY2FsZU9yZGluYWw8bnVtYmVyLCBzdHJpbmc+KHtcbiAgZG9tYWluOiBrZXlzLFxuICByYW5nZTogWydtdXN0YXJkJywgJ2NoZXJyeScsICduYXZ5JywgJ2NpcmNsZXMnLCAnY2lyY2xlcycsICdjaXJjbGVzJywgJ2NpcmNsZXMnXSxcbn0pO1xuXG5mdW5jdGlvbiB1c2VGb3JjZVVwZGF0ZSgpIHtcbiAgY29uc3QgWywgc2V0VmFsdWVdID0gdXNlU3RhdGU8bnVtYmVyPigwKTtcbiAgcmV0dXJuICgpID0+IHNldFZhbHVlKHZhbHVlID0+IHZhbHVlICsgMSk7IC8vIHVwZGF0ZSBzdGF0ZSB0byBmb3JjZSByZW5kZXJcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU3RyZWFtZ3JhcGgoeyB3aWR0aCwgaGVpZ2h0IH06IFNob3dQcm92aWRlZFByb3BzKSB7XG4gIGNvbnN0IGZvcmNlVXBkYXRlID0gdXNlRm9yY2VVcGRhdGUoKTtcblxuICBpZiAod2lkdGggPCAxMCkgcmV0dXJuIG51bGw7XG5cbiAgeFNjYWxlLnJhbmdlKFswLCB3aWR0aF0pO1xuICB5U2NhbGUucmFuZ2UoW2hlaWdodCwgMF0pO1xuXG4gIC8vIGdlbmVyYXRlIGxheWVycyBpbiByZW5kZXIgdG8gdXBkYXRlIG9uIHRvdWNoXG4gIGNvbnN0IGxheWVycyA9IHRyYW5zcG9zZTxudW1iZXI+KGtleXMubWFwKCgpID0+IGJ1bXBzKFNBTVBMRVNfUEVSX0xBWUVSLCBCVU1QU19QRVJfTEFZRVIpKSk7XG5cbiAgcmV0dXJuIChcbiAgICA8c3ZnIHdpZHRoPXt3aWR0aH0gaGVpZ2h0PXtoZWlnaHR9PlxuICAgICAgPFBhdHRlcm5DaXJjbGVzIGlkPVwibXVzdGFyZFwiIGhlaWdodD17NDB9IHdpZHRoPXs0MH0gcmFkaXVzPXs1fSBmaWxsPVwiIzAzNmVjZlwiIGNvbXBsZW1lbnQgLz5cbiAgICAgIDxQYXR0ZXJuV2F2ZXNcbiAgICAgICAgaWQ9XCJjaGVycnlcIlxuICAgICAgICBoZWlnaHQ9ezEyfVxuICAgICAgICB3aWR0aD17MTJ9XG4gICAgICAgIGZpbGw9XCJ0cmFuc3BhcmVudFwiXG4gICAgICAgIHN0cm9rZT1cIiMyMzI0OTNcIlxuICAgICAgICBzdHJva2VXaWR0aD17MX1cbiAgICAgIC8+XG4gICAgICA8UGF0dGVybkNpcmNsZXMgaWQ9XCJuYXZ5XCIgaGVpZ2h0PXs2MH0gd2lkdGg9ezYwfSByYWRpdXM9ezEwfSBmaWxsPVwid2hpdGVcIiBjb21wbGVtZW50IC8+XG4gICAgICA8UGF0dGVybkNpcmNsZXNcbiAgICAgICAgY29tcGxlbWVudFxuICAgICAgICBpZD1cImNpcmNsZXNcIlxuICAgICAgICBoZWlnaHQ9ezYwfVxuICAgICAgICB3aWR0aD17NjB9XG4gICAgICAgIHJhZGl1cz17MTB9XG4gICAgICAgIGZpbGw9XCJ0cmFuc3BhcmVudFwiXG4gICAgICAvPlxuICAgICAgPGcgb25DbGljaz17KCkgPT4gZm9yY2VVcGRhdGUoKX0gb25Ub3VjaFN0YXJ0PXsoKSA9PiBmb3JjZVVwZGF0ZSgpfT5cbiAgICAgICAgPHJlY3QgeD17MH0geT17MH0gd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0gZmlsbD1cIiNmZmRlZGVcIiByeD17MTR9IC8+XG4gICAgICAgIDxTdGFjazxudW1iZXJbXSwgbnVtYmVyPlxuICAgICAgICAgIGRhdGE9e2xheWVyc31cbiAgICAgICAgICBrZXlzPXtrZXlzfVxuICAgICAgICAgIG9mZnNldD1cIndpZ2dsZVwiXG4gICAgICAgICAgY29sb3I9e2NvbG9yU2NhbGV9XG4gICAgICAgICAgeD17KGQsIGkpID0+IHhTY2FsZShpKX1cbiAgICAgICAgICB5MD17ZCA9PiB5U2NhbGUoZFswXSl9XG4gICAgICAgICAgeTE9e2QgPT4geVNjYWxlKGRbMV0pfVxuICAgICAgICA+XG4gICAgICAgICAgeyh7IHN0YWNrcywgcGF0aCB9KSA9PlxuICAgICAgICAgICAgc3RhY2tzLm1hcChzdGFjayA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IGQgPSBwYXRoKHN0YWNrKSB8fCAnJztcbiAgICAgICAgICAgICAgY29uc3QgY29sb3IgPSBjb2xvclNjYWxlKHN0YWNrLmtleSk7XG4gICAgICAgICAgICAgIGNvbnN0IHBhdHRlcm4gPSBwYXR0ZXJuU2NhbGUoc3RhY2sua2V5KTtcbiAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8ZyBrZXk9e2BzZXJpZXMtJHtzdGFjay5rZXl9YH0+XG4gICAgICAgICAgICAgICAgICA8cGF0aCBkPXtkfSBmaWxsPXtjb2xvcn0gLz5cbiAgICAgICAgICAgICAgICAgIHtwYXR0ZXJuICE9PSAnY2lyY2xlcycgJiYgPHBhdGggZD17ZH0gZmlsbD17YHVybCgjJHtwYXR0ZXJufSlgfSAvPn1cbiAgICAgICAgICAgICAgICA8L2c+XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH1cbiAgICAgICAgPC9TdGFjaz5cbiAgICAgIDwvZz5cbiAgICA8L3N2Zz5cbiAgKTtcbn1cbnRyeSB7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIEV4YW1wbGUuZGlzcGxheU5hbWUgPSBcIkV4YW1wbGVcIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgRXhhbXBsZS5fX2RvY2dlbkluZm8gPSB7IFwiZGVzY3JpcHRpb25cIjogXCJcIiwgXCJkaXNwbGF5TmFtZVwiOiBcIkV4YW1wbGVcIiwgXCJwcm9wc1wiOiB7IFwid2lkdGhcIjogeyBcImRlZmF1bHRWYWx1ZVwiOiBudWxsLCBcImRlc2NyaXB0aW9uXCI6IFwiXCIsIFwibmFtZVwiOiBcIndpZHRoXCIsIFwicmVxdWlyZWRcIjogdHJ1ZSwgXCJ0eXBlXCI6IHsgXCJuYW1lXCI6IFwibnVtYmVyXCIgfSB9LCBcImhlaWdodFwiOiB7IFwiZGVmYXVsdFZhbHVlXCI6IG51bGwsIFwiZGVzY3JpcHRpb25cIjogXCJcIiwgXCJuYW1lXCI6IFwiaGVpZ2h0XCIsIFwicmVxdWlyZWRcIjogdHJ1ZSwgXCJ0eXBlXCI6IHsgXCJuYW1lXCI6IFwibnVtYmVyXCIgfSB9LCBcIm1hcmdpblwiOiB7IFwiZGVmYXVsdFZhbHVlXCI6IG51bGwsIFwiZGVzY3JpcHRpb25cIjogXCJcIiwgXCJuYW1lXCI6IFwibWFyZ2luXCIsIFwicmVxdWlyZWRcIjogZmFsc2UsIFwidHlwZVwiOiB7IFwibmFtZVwiOiBcIk1hcmdpblNoYXBlIHwgdW5kZWZpbmVkXCIgfSB9LCBcImV2ZW50c1wiOiB7IFwiZGVmYXVsdFZhbHVlXCI6IG51bGwsIFwiZGVzY3JpcHRpb25cIjogXCJcIiwgXCJuYW1lXCI6IFwiZXZlbnRzXCIsIFwicmVxdWlyZWRcIjogZmFsc2UsIFwidHlwZVwiOiB7IFwibmFtZVwiOiBcImJvb2xlYW4gfCB1bmRlZmluZWRcIiB9IH0gfSB9O1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBpZiAodHlwZW9mIFNUT1JZQk9PS19SRUFDVF9DTEFTU0VTICE9PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIFNUT1JZQk9PS19SRUFDVF9DTEFTU0VTW1wic3JjL3NhbmRib3hlcy92aXN4LXN0cmVhbWdyYXBoL0V4YW1wbGUudHN4I0V4YW1wbGVcIl0gPSB7IGRvY2dlbkluZm86IEV4YW1wbGUuX19kb2NnZW5JbmZvLCBuYW1lOiBcIkV4YW1wbGVcIiwgcGF0aDogXCJzcmMvc2FuZGJveGVzL3Zpc3gtc3RyZWFtZ3JhcGgvRXhhbXBsZS50c3gjRXhhbXBsZVwiIH07XG59XG5jYXRjaCAoX19yZWFjdF9kb2NnZW5fdHlwZXNjcmlwdF9sb2FkZXJfZXJyb3IpIHsgfSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/sandboxes/visx-streamgraph/Example.tsx\n");

/***/ }),

/***/ "./src/sandboxes/visx-streamgraph/generateData.ts":
false,

/***/ "./src/sandboxes/visx-streamgraph/useForceUpdate.ts":
false

})